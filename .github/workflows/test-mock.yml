name: "Test Functionality of the Mock cli"
on:
  pull_request:
    paths:
      - '.github/workflows/test-mock.yml'
      - 'cli/**'
      - 'logger/**'
      - 'scripts/**'
      - 'go.mod'
      - 'go.sum'
    types: [ labeled, opened, synchronize, reopened ]
    branches: [ main ]
  push:
    paths:
      - 'scripts/**'
      - 'logger/**'
      - 'cli/**'
      - '.github/workflows/test-mock.yml'
      - 'go.mod'
      - 'go.sum'
    branches: [ main ]

jobs:
  ksctl-cli-mongodb-driver:
    runs-on: ubuntu-latest
    if: |
      (
        github.event.label.name == 'pr/lgtm' ||
        contains(github.event.pull_request.labels.*.name, 'pr/lgtm')
      ) || (
        github.event_name == 'push' && 
        github.ref == 'refs/heads/main'
      )
    env:
      MONGODB_URI: "mongodb://root:1234@127.0.0.1:27017"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.3

      - name: build ksctl linux
        run: |
          set -x
          make install_linux
          echo "KSCTL_BIN=ksctl" >> "${GITHUB_ENV}"

      - name: local version
        run: |
          ${{ env.KSCTL_BIN }} version

      - name: local create
        run: |
          docker run -d \
            --name mongodb \
            -p 27017:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=root \
            -e MONGO_INITDB_ROOT_PASSWORD=1234 \
            mongo
          ${{env.KSCTL_BIN}} create local -n demolocal-extmongo -s external-store-mongodb --verbose -1 --yes
          ${{env.KSCTL_BIN}} info -p local -n demolocal-extmongo -s external-store-mongodb --verbose -1

      - name: local get
        run: |
          ${{env.KSCTL_BIN}} get -s external-store-mongodb

      - name: local switch
        run: |
          ${{env.KSCTL_BIN}} switch -p local -n demolocal-extmongo -s external-store-mongodb

      - name: local delete
        run: |
          ${{env.KSCTL_BIN}} delete local -n demolocal-extmongo -v -1 -s external-store-mongodb --yes


  ksctl-cli:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    if: |
      (
        github.event.label.name == 'pr/lgtm' ||
        contains(github.event.pull_request.labels.*.name, 'pr/lgtm')
      ) || (
        github.event_name == 'push' && 
        github.ref == 'refs/heads/main'
      )
    runs-on: ${{ matrix.os }}
    env:
      KSCTL_FAKE_FLAG_ENABLED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.3

      - name: build ksctl windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-PSDebug -Trace 2
          cd .\scripts
          .\builder-mock.ps1
          echo "KSCTL_BIN=$env:LOCALAPPDATA\ksctl\ksctl.exe" >> $env:GITHUB_ENV

      - name: build ksctl linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          set -x
          make install_linux_mock
          echo "KSCTL_BIN=ksctl" >> "${GITHUB_ENV}"

      - name: build ksctl macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          set -x
          make install_macos_intel_mock
          echo "KSCTL_BIN=ksctl" >> "${GITHUB_ENV}"

      - name: version
        run: |
          ${{ env.KSCTL_BIN }} version

      - name: civo create
        run: |
          ${{ env.KSCTL_BIN }} create civo -n demo -r LON1 --nodeSizeMP "g4s.kube.small" --version 1.27.1 --verbose -1 -s store-local --yes

          ${{ env.KSCTL_BIN }} info -p civo -n demo -r LON1 --verbose -1 -s store-local

          ${{env.KSCTL_BIN}} create ha-civo -n ha-demo-k3s --nodeSizeDS "fake.small" --version 1.27.1 --nodeSizeLB "fake.small" --nodeSizeCP "fake.small" --nodeSizeWP "fake.small" -s store-local -r LON1 --verbose -1 --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} info -p ha-civo -n ha-demo-k3s -s store-local -r LON1 --verbose -1

          ${{env.KSCTL_BIN}} create ha-civo -n ha-demo-kubeadm --nodeSizeDS "fake.small" --version 1.28 --nodeSizeLB "fake.small" --nodeSizeCP "fake.small" --nodeSizeWP "fake.small" -s store-local -r LON1 --verbose -1 --yes --bootstrap kubeadm

          ${{env.KSCTL_BIN}} info -p ha-civo -n ha-demo-kubeadm -s store-local -r LON1 --verbose -1

      - name: azure create
        run: |
          ${{env.KSCTL_BIN}} create azure -n demo -r fake --nodeSizeMP "fake" -s store-local --version 1.27.1 --verbose -1 --yes

          ${{env.KSCTL_BIN}} info -p azure -n demo -r fake -s store-local --verbose -1

          ${{env.KSCTL_BIN}} create ha-azure -n ha-demo-k3s --nodeSizeDS "fake"  --version 1.27.1 --nodeSizeLB "fake" --nodeSizeCP "fake" --nodeSizeWP "fake" -r fake --verbose -1 -s store-local --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} info -p ha-azure -n ha-demo-k3s -r fake -s store-local --verbose -1

          ${{env.KSCTL_BIN}} create ha-azure -n ha-demo-kubeadm --nodeSizeDS "fake"  --version 1.28 --nodeSizeLB "fake" --nodeSizeCP "fake" --nodeSizeWP "fake" -r fake --verbose -1 -s store-local --yes --bootstrap kubeadm

          ${{env.KSCTL_BIN}} info -p ha-azure -n ha-demo-kubeadm -r fake -s store-local --verbose -1

      - name: aws create
        run: |
          # ${{env.KSCTL_BIN}} create aws -n demo -r fake-region --nodeSizeMP "fake" --version 1.27.1 -s store-local --verbose -1 --yes
          
          #${{env.KSCTL_BIN}} info -p aws -n demo -r fake-region -s store-local --verbose -1
          
          ${{env.KSCTL_BIN}} create ha-aws -n ha-demo-k3s --nodeSizeDS "fake"  --version 1.27.1 --nodeSizeLB "fake" --nodeSizeCP "fake" --nodeSizeWP "fake" -r fake-region --verbose -1 -s store-local --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} info -p ha-aws -n ha-demo-k3s -r fake-region -s store-local --verbose -1

          ${{env.KSCTL_BIN}} create ha-aws -n ha-demo-kubeadm --nodeSizeDS "fake"  --version 1.28 --nodeSizeLB "fake" --nodeSizeCP "fake" --nodeSizeWP "fake" -r fake-region --verbose -1 -s store-local --yes --bootstrap kubeadm

          ${{env.KSCTL_BIN}} info -p ha-aws -n ha-demo-kubeadm -r fake-region -s store-local --verbose -1

      - name: local create
        run: |
          ${{env.KSCTL_BIN}} create local -n demolocal  --version 1.27.1 --verbose -1 -s store-local --yes
          ${{env.KSCTL_BIN}} info -p local -n demolocal -s store-local --verbose -1

      - name: civo get
        run: |
          ${{env.KSCTL_BIN}} get -s store-local -p civo

      - name: azure get
        run: |
          ${{env.KSCTL_BIN}} get -s store-local -p azure

      - name: aws get
        run: |
          ${{env.KSCTL_BIN}} get -s store-local -p aws

      - name: get all
        run: |
          ${{env.KSCTL_BIN}} get -s store-local

      - name: civo switch
        run: |
          ${{env.KSCTL_BIN}} switch -p civo -n demo -s store-local -r LON1
          ${{env.KSCTL_BIN}} switch -p ha-civo -n ha-demo-k3s -s store-local -r LON1
          ${{env.KSCTL_BIN}} switch -p ha-civo -n ha-demo-kubeadm -s store-local -r LON1

      - name: aws switch
        run: |
          # ${{env.KSCTL_BIN}} switch -p aws -n demo -s store-local -r fake-region
          ${{env.KSCTL_BIN}} switch -p ha-aws -n ha-demo-k3s -s store-local -r fake-region
          ${{env.KSCTL_BIN}} switch -p ha-aws -n ha-demo-kubeadm -s store-local -r fake-region

      - name: azure switch
        run: |
          ${{env.KSCTL_BIN}} switch -p azure -n demo -s store-local -r fake
          ${{env.KSCTL_BIN}} switch -p ha-azure -n ha-demo-k3s -s store-local -r fake
          ${{env.KSCTL_BIN}} switch -p ha-azure -n ha-demo-kubeadm -s store-local -r fake

      - name: local switch
        run: |
          ${{env.KSCTL_BIN}} switch -p local -n demolocal -s store-local

      - name: civo scale up and down
        run: |
          ${{env.KSCTL_BIN}} delete ha-civo del-nodes -n ha-demo-k3s --noWP 0 -r LON1 -s store-local --yes -v -1 --bootstrap k3s

          ${{env.KSCTL_BIN}} create ha-civo add-nodes -n ha-demo-k3s --noWP 1  --version 1.27.1 --nodeSizeWP "fake.small" -s store-local -r LON1 -v -1 --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} delete ha-civo del-nodes -n ha-demo-kubeadm --noWP 0 -r LON1 -s store-local --yes -v -1 --bootstrap kubeadm

          ${{env.KSCTL_BIN}} create ha-civo add-nodes -n ha-demo-kubeadm --noWP 1  --version 1.28 --nodeSizeWP "fake.small" -s store-local -r LON1 -v -1 --yes --bootstrap kubeadm

      - name: azure scale up and down
        run: |
          ${{env.KSCTL_BIN}} delete ha-azure del-nodes -n ha-demo-k3s --noWP 0 -r fake -s store-local --yes -v -1 --bootstrap k3s

          ${{env.KSCTL_BIN}} create ha-azure add-nodes -n ha-demo-k3s --noWP 1  --version 1.27.1 --nodeSizeWP "fake" -s store-local -r fake -v -1 --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} delete ha-azure del-nodes -n ha-demo-kubeadm --noWP 0 -r fake -s store-local --yes -v -1 --bootstrap kubeadm

          ${{env.KSCTL_BIN}} create ha-azure add-nodes -n ha-demo-kubeadm --noWP 1  --version 1.28 --nodeSizeWP "fake" -s store-local -r fake -v -1 --yes --bootstrap kubeadm

      - name: aws scale up and down
        run: |
          ${{env.KSCTL_BIN}} delete ha-aws del-nodes -n ha-demo-k3s --noWP 0 -r fake-region -s store-local --yes -v -1 --bootstrap k3s

          ${{env.KSCTL_BIN}} create ha-aws add-nodes -n ha-demo-k3s --noWP 1  --version 1.27.1 --nodeSizeWP "fake" -s store-local -r fake-region -v -1 --yes --bootstrap k3s

          ${{env.KSCTL_BIN}} delete ha-aws del-nodes -n ha-demo-kubeadm --noWP 0 -r fake-region -s store-local --yes -v -1 --bootstrap kubeadm

          ${{env.KSCTL_BIN}} create ha-aws add-nodes -n ha-demo-kubeadm --noWP 1  --version 1.28 --nodeSizeWP "fake" -s store-local -r fake-region -v -1 --yes --bootstrap kubeadm

      - name: civo delete
        run: |
          ${{env.KSCTL_BIN}} delete civo -n demo -r LON1 -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-civo -n ha-demo-k3s -r LON1 -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-civo -n ha-demo-kubeadm -r LON1 -s store-local -v -1 --yes

      - name: azure delete
        run: |
          ${{env.KSCTL_BIN}} delete azure -n demo -r fake -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-azure -n ha-demo-k3s -r fake -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-azure -n ha-demo-kubeadm -r fake -s store-local -v -1 --yes

      - name: aws delete
        run: |
          # ${{env.KSCTL_BIN}} delete aws -n demo -r fake-region -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-aws -n ha-demo-k3s -r fake-region -s store-local -v -1 --yes
          ${{env.KSCTL_BIN}} delete ha-aws -n ha-demo-kubeadm -r fake-region -s store-local -v -1 --yes

      - name: local delete
        run: |
          ${{env.KSCTL_BIN}} delete local -n demolocal -s store-local -v -1 --yes


